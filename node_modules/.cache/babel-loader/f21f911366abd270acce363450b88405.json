{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\LiIbraries\\\\Study\\\\FrontEnd\\\\DoC-Weather\\\\weather\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst PLACES = [{\n  name: \"Свесса\",\n  zip: \"Svesa\"\n}, {\n  name: \"Харьков\",\n  zip: \"Kharkov\"\n}, {\n  name: \"Сумы\",\n  zip: \"Sumy\"\n}, {\n  name: \"Киев\",\n  zip: \"Kyiv\"\n}];\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n\n  componentDidMount() {\n    const zip = this.props.zip;\n    const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" + zip + \"&appid=789d8bf96c25b83d0b02c6bb6f750d34&units=metric\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }, this);\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [weather.main, \" in \", weatherData.name, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: iconUrl,\n          alt: weatherData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current: \", weatherData.main.temp.toFixed(0), \"\\xB0\\u0421\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"High: \", weatherData.main.temp_max.toFixed(0), \"\\xB0\\u0421\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low: \", weatherData.main.temp_min.toFixed(0), \"\\xB0\\u0421\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed: \", weatherData.wind.speed, \" \\u043C\\u0435\\u0442\\u0440\\u043E\\u0432/\\u0441\\u0435\\u043A\\u0443\\u043D\\u0434\\u0443\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePlace: 0\n    };\n  }\n\n  render() {\n    const activePlace = this.state.activePlace;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(WeatherDisplay, {\n        zip: PLACES[activePlace].zip\n      }, activePlace, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), PLACES.map((place, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.setState({\n            activePlace: index\n          });\n          console.log('Clicked index ' + index);\n        },\n        children: place.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/LiIbraries/Study/FrontEnd/DoC-Weather/weather/src/App.js"],"names":["React","Component","PLACES","name","zip","WeatherDisplay","constructor","state","weatherData","componentDidMount","props","URL","fetch","then","res","json","setState","render","weather","iconUrl","icon","main","description","temp","toFixed","temp_max","temp_min","wind","speed","App","activePlace","map","place","index","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nconst PLACES = [\n    {name: \"Свесса\", zip: \"Svesa\"},\n    {name: \"Харьков\", zip: \"Kharkov\"},\n    {name: \"Сумы\", zip: \"Sumy\"},\n    {name: \"Киев\", zip: \"Kyiv\"}\n];\n\nclass WeatherDisplay extends Component {\n    constructor() {\n        super();\n        this.state = {\n            weatherData: null\n        };\n    }\n    componentDidMount() {\n        const zip = this.props.zip;\n        const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n            zip +\n            \"&appid=789d8bf96c25b83d0b02c6bb6f750d34&units=metric\";\n        fetch(URL).then(res => res.json()).then(json => {\n            this.setState({weatherData: json});\n        });\n    }\n    render() {\n        const weatherData = this.state.weatherData;\n        if (!weatherData) return <div>Loading</div>;\n        const weather = weatherData.weather[0];\n        const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n        return (\n            <div>\n                <h1>\n                    {weather.main} in {weatherData.name}\n                    <img src={iconUrl} alt={weatherData.description} />\n                </h1>\n                <p>Current: {(weatherData.main.temp).toFixed(0)}°С</p>\n                <p>High: {(weatherData.main.temp_max).toFixed(0)}°С</p>\n                <p>Low: {(weatherData.main.temp_min).toFixed(0)}°С</p>\n                <p>Wind Speed: {(weatherData.wind.speed)} метров/секунду</p>\n            </div>\n        )\n    }\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activePlace: 0,\n        };\n    }\n\n    render() {\n        const activePlace = this.state.activePlace;\n\n        return (\n            <div className=\"App\">\n                <WeatherDisplay\n                    zip={PLACES[activePlace].zip}\n                    key={activePlace}\n                />\n\n                {PLACES.map((place, index) => (\n                    <button\n                        key={index}\n                        onClick={() => {\n                            this.setState({activePlace: index});\n                            console.log('Clicked index ' + index);\n                        }}\n                    >\n                        {place.name}\n                    </button>\n                ))}\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}