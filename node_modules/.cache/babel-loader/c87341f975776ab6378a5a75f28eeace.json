{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\LiIbraries\\\\Study\\\\FrontEnd\\\\DoC-Weather\\\\weather\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Navbar, NavItem, Nav, Grid, Row, Col } from \"react-bootstrap\";\nconst PLACES = [{\n  name: \"Харьков\",\n  zip: \"Kharkov\"\n}, {\n  name: \"Свесса\",\n  zip: \"Svesa\"\n}, {\n  name: \"Сумы\",\n  zip: \"Sumy\"\n}, {\n  name: \"Киев\",\n  zip: \"Kyiv\"\n}];\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n\n  componentDidMount() {\n    const zip = this.props.zip;\n    const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" + zip + \"&appid=789d8bf96c25b83d0b02c6bb6f750d34&units=metric\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 34\n    }, this);\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [weather.main, \" in \", weatherData.name, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: iconUrl,\n          alt: weatherData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current: \", weatherData.main.temp.toFixed(0), \"\\xB0\\u0421\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"High: \", weatherData.main.temp_max.toFixed(0), \"\\xB0\\u0421\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low: \", weatherData.main.temp_min.toFixed(0), \"\\xB0\\u0421\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed: \", weatherData.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePlace: 0\n    };\n  }\n\n  render() {\n    const activePlace = this.state.activePlace;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        children: /*#__PURE__*/_jsxDEV(Navbar.Header, {\n          children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            children: \"React Simple Weather App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Select a city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Nav, {\n              bsStyle: \"pills\",\n              stacked: true,\n              activeKey: activePlace,\n              onSelect: index => {\n                this.setState({\n                  activePlace: index\n                });\n              },\n              children: PLACES.map((place, index) => /*#__PURE__*/_jsxDEV(NavItem, {\n                eventKey: index,\n                children: place.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 8,\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n              zip: PLACES[activePlace].zip\n            }, activePlace, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/LiIbraries/Study/FrontEnd/DoC-Weather/weather/src/App.js"],"names":["React","Component","Navbar","NavItem","Nav","Grid","Row","Col","PLACES","name","zip","WeatherDisplay","constructor","state","weatherData","componentDidMount","props","URL","fetch","then","res","json","setState","render","weather","iconUrl","icon","main","description","temp","toFixed","temp_max","temp_min","wind","speed","App","activePlace","index","map","place"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Navbar, NavItem, Nav, Grid, Row, Col } from \"react-bootstrap\";\n\nconst PLACES = [\n    {name: \"Харьков\", zip: \"Kharkov\"},\n    {name: \"Свесса\", zip: \"Svesa\"},\n    {name: \"Сумы\", zip: \"Sumy\"},\n    {name: \"Киев\", zip: \"Kyiv\"}\n];\n\nclass WeatherDisplay extends Component {\n    constructor() {\n        super();\n        this.state = {\n            weatherData: null\n        };\n    }\n    componentDidMount() {\n        const zip = this.props.zip;\n        const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n            zip +\n            \"&appid=789d8bf96c25b83d0b02c6bb6f750d34&units=metric\";\n        fetch(URL).then(res => res.json()).then(json => {\n            this.setState({weatherData: json});\n        });\n    }\n    render() {\n        const weatherData = this.state.weatherData;\n        if (!weatherData) return <div>Loading</div>;\n        const weather = weatherData.weather[0];\n        const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n        return (\n            <div>\n                <h1>\n                    {weather.main} in {weatherData.name}\n                    <img src={iconUrl} alt={weatherData.description} />\n                </h1>\n                <p>Current: {(weatherData.main.temp).toFixed(0)}°С</p>\n                <p>High: {(weatherData.main.temp_max).toFixed(0)}°С</p>\n                <p>Low: {(weatherData.main.temp_min).toFixed(0)}°С</p>\n                <p>Wind Speed: {(weatherData.wind.speed)} m/s</p>\n            </div>\n        )\n    }\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activePlace: 0,\n        };\n    }\n\n    render() {\n        const activePlace = this.state.activePlace;\n\n        return (\n            <div>\n                <Navbar>\n                    <Navbar.Header>\n                        <Navbar.Brand>\n                            React Simple Weather App\n                        </Navbar.Brand>\n                    </Navbar.Header>\n                </Navbar>\n                <Grid>\n                    <Row>\n                        <Col md={4} sm={4}>\n                            <h3>Select a city</h3>\n                            <Nav\n                                bsStyle=\"pills\"\n                                stacked\n                                activeKey={activePlace}\n                                onSelect={index => {\n                                    this.setState({ activePlace: index });\n                                }}\n                            >\n                                {PLACES.map((place, index) => (\n                                    <NavItem key={index} eventKey={index}>{place.name}</NavItem>\n                                ))}\n                            </Nav>\n                        </Col>\n                        <Col md={8} sm={8}>\n                            <WeatherDisplay key={activePlace} zip={PLACES[activePlace].zip} />\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}